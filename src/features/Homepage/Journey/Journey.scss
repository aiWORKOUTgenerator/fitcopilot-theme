@use "../../../styles/design-system" as ds;
@use "./_tokens" as tokens;

.journey-section {
  padding: 4rem 0; // Use hardcoded value instead of variable
  background-color: var(--journey-bg, #f9fafb); // Use CSS custom property with fallback
  overflow: hidden;
  position: relative;

  &__container {
    max-width: 1280px; // Use hardcoded value instead of variable
    margin: 0 auto;
    padding: 0 1.5rem; // Use hardcoded value instead of variable
    position: relative;
    z-index: 2;
  }

  &__heading {
    text-align: center;
    margin-bottom: 3rem; // Use hardcoded value instead of variable

    h2 {
      font-size: 1.875rem; // Use hardcoded value instead of variable
      font-weight: 700; // Use hardcoded value instead of variable  
      margin-bottom: 1.5rem; // Use hardcoded value instead of variable
      color: var(--journey-heading-color, #111827); // Use CSS custom property with fallback
    }

    p {
      font-size: 1.125rem; // Use hardcoded value instead of variable
      color: var(--journey-description-color, #4b5563); // Use CSS custom property with fallback
      max-width: 700px;
      margin: 0 auto;
    }
  }

  &__steps {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 3rem; // Use hardcoded value instead of variable
    margin-bottom: 3rem; // Use hardcoded value instead of variable

    @media (max-width: 768px) {
      // Use hardcoded value instead of variable
      flex-direction: column;
    }
  }

  &__cta {
    text-align: center;
    margin-top: 3rem; // Use hardcoded value instead of variable

    .button {
      padding: 1.5rem 2rem; // Use hardcoded value instead of variable
      font-size: 1.125rem; // Use hardcoded value instead of variable
      font-weight: 700; // Use hardcoded value instead of variable
      border-radius: 9999px; // Use hardcoded value instead of variable
      display: inline-flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s ease;
      text-decoration: none;
      color: #ffffff; // Use hardcoded value instead of variable
      background: linear-gradient(135deg, tokens.$gradient-start 0%, tokens.$gradient-end 100%);
      border: none;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
      }

      svg {
        margin-left: 0.5rem; // Use hardcoded value instead of variable
      }
    }
  }

  &__bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;

    &-decor {
      position: absolute;
      border-radius: 50%;

      &--1 {
        top: -10%;
        right: -5%;
        width: 600px;
        height: 600px;
        background: radial-gradient(circle, rgba(tokens.$accent-color-light, 0.05) 0%, rgba(tokens.$accent-color-light, 0) 70%);
      }

      &--2 {
        bottom: -15%;
        left: -10%;
        width: 800px;
        height: 800px;
        background: radial-gradient(circle, rgba(tokens.$accent-color, 0.05) 0%, rgba(tokens.$accent-color, 0) 70%);
      }
    }
  }
}

// Floating icons container for Journey
.journey-floating-icons {
  position: absolute;
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  z-index: 1;
}

.journey-floating-icon {
  position: absolute;
  opacity: 0.5;
  filter: drop-shadow(0 0 6px rgba(163, 230, 53, 0.3));
  transform-origin: center;
  z-index: 0;
  will-change: transform;

  svg {
    color: #a3e635;
    fill: rgba(163, 230, 53, 0.08);
    stroke-width: 1.75;
  }

  &:nth-child(odd) {
    animation-direction: alternate;
  }

  &:nth-child(even) {
    animation-direction: alternate-reverse;
  }
}

@keyframes float {
  0% {
    transform: translateY(0) rotate(0deg) scale(1);
  }

  50% {
    transform: translateY(10px) rotate(5deg) scale(1.03);
  }

  100% {
    transform: translateY(0) rotate(0deg) scale(1);
  }
}