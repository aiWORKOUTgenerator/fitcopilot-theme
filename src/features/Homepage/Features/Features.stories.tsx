import type { Meta, StoryObj } from '@storybook/react';
import { Features, ProgressChart, SampleWorkout, VideoPlayer } from './Features';

// Use the Feature interface from the component
interface Feature {
    id: number;
    title: string;
    description: string;
    icon?: string;
    link?: string;
    gradient?: string;
    demoComponent?: React.ReactNode;
}

const meta: Meta<typeof Features> = {
  title: 'features/Homepage/Features',
  component: Features,
  parameters: {
    layout: 'fullscreen',
    backgrounds: {
      default: 'dark'
    },
    docs: {
      description: {
        component: 'The Features component displays a grid of feature cards with icons, titles, and descriptions. Each feature includes an icon, gradient background, and interactive demo component that appears when hovering.'
      }
    }
  }
};

export default meta;
type Story = StoryObj<typeof Features>;

const defaultFeatures: Feature[] = [
  {
    id: 1,
    title: 'AI-Powered Workouts',
    description: 'Get personalized workout plans generated by our advanced AI algorithm based on your goals, fitness level, and preferences.',
    icon: '/icons/ai.svg',
    gradient: 'from-purple-500 to-blue-500',
    demoComponent: <SampleWorkout />
  },
  {
    id: 2,
    title: 'Real-Time Form Analysis',
    description: 'Our AI technology analyzes your exercise form in real-time to prevent injuries and ensure proper technique.',
    icon: '/icons/form.svg',
    gradient: 'from-green-500 to-teal-500',
    demoComponent: <ProgressChart />
  },
  {
    id: 3,
    title: 'Progress Tracking',
    description: 'Track your fitness journey with detailed analytics, progress photos, and performance metrics.',
    icon: '/icons/progress.svg',
    gradient: 'from-orange-500 to-red-500',
    demoComponent: <VideoPlayer />
  }
];

export const Default: Story = {
  parameters: {
    docs: {
      description: {
        story: 'Default Features section with three interactive feature cards.'
      }
    }
  }
};

export const Empty: Story = {
  args: {
    features: []
  },
  parameters: {
    docs: {
      description: {
        story: 'Features section with no features to display.'
      }
    }
  }
};

export const SingleFeature: Story = {
  args: {
    features: [defaultFeatures[0]]
  },
  parameters: {
    docs: {
      description: {
        story: 'Features section with a single feature.'
      }
    }
  }
}; 