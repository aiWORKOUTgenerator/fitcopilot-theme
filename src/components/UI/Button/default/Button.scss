/**
 * Default Theme Button Styles
 * 
 * Styles specific to the default theme button variant
 */

@use '../../../../styles/design-system/index' as *;

// Import the core button styles
@import '../Button.scss';

// Override for athlete-dashboard-root global reset
// This has higher specificity to override the global button reset
#athlete-dashboard-root .button--gradient {
    background: linear-gradient(to right, var(--color-lime-300, #84cc16), var(--color-emerald-400, #10b981)) !important;
    color: var(--color-text-dark, #111827) !important;

    &:hover:not(:disabled) {
        transform: translateY(-2px) !important;
        box-shadow: 0 10px 15px -3px rgba(132, 204, 22, 0.3) !important;
    }
}

#athlete-dashboard-root .personal-training-section .button--gradient {
    background: var(--pt-button-primary-bg, linear-gradient(to right, var(--color-lime-300, #84cc16), var(--color-emerald-400, #10b981))) !important;
    color: var(--pt-button-primary-color, var(--color-text-dark, #111827)) !important;

    &:hover:not(:disabled) {
        transform: translateY(var(--pt-button-primary-hover-y, -5px)) !important;
        box-shadow: var(--pt-button-primary-shadow, 0 10px 15px -3px rgba(132, 204, 22, 0.3)) !important;
    }
}

// Default theme button styles
.button {

    // Color variants - Using a lower specificity approach to allow overrides
    // The use of :where() reduces specificity while maintaining selector grouping
    &:where(&--primary) {
        background-color: var(--color-primary, #7c3aed);
        color: var(--color-text-inverse, white);

        &:hover:not(:disabled) {
            filter: brightness(1.05);
        }

        &:active:not(:disabled) {
            filter: brightness(0.95);
        }
    }

    &:where(&--secondary) {
        background-color: var(--color-secondary, #e5e7eb);
        color: var(--color-text, #111827);

        &:hover:not(:disabled) {
            filter: brightness(1.05);
        }

        &:active:not(:disabled) {
            filter: brightness(0.95);
        }
    }

    &:where(&--tertiary) {
        background-color: transparent;
        color: var(--color-primary, #7c3aed);
        border: 1px solid var(--color-primary, #7c3aed);

        &:hover:not(:disabled) {
            background-color: rgba(var(--color-primary-rgb, 124, 58, 237), 0.05);
        }

        &:active:not(:disabled) {
            background-color: rgba(var(--color-primary-rgb, 124, 58, 237), 0.1);
        }
    }

    &:where(&--ghost) {
        background-color: transparent;
        color: var(--color-text, #111827);

        &:hover:not(:disabled) {
            background-color: var(--color-hover-light, rgba(0, 0, 0, 0.05));
        }

        &:active:not(:disabled) {
            background-color: var(--color-active-light, rgba(0, 0, 0, 0.1));
        }
    }

    // Gradient Button - Default theme
    &:where(&--gradient) {
        --button-gradient-from: var(--color-lime-300, #84cc16);
        --button-gradient-to: var(--color-emerald-400, #10b981);
        --button-text-color: var(--color-gray-900, #111827);
        --button-radius: var(--radius-md, 0.5rem);
        --button-hover-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);

        background: linear-gradient(to right, var(--button-gradient-from), var(--button-gradient-to));
        color: var(--button-text-color);
        border-radius: var(--button-radius);
        font-weight: 600;
        box-shadow: var(--shadow-sm, 0 1px 2px 0 rgba(0, 0, 0, 0.05));

        &:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: var(--button-hover-shadow);
        }

        &:active:not(:disabled) {
            transform: translateY(-1px);
            box-shadow: var(--shadow-sm, 0 1px 2px 0 rgba(0, 0, 0, 0.05));
        }
    }

    // Section-specific styling with proper specificity
    // This uses a parent selector pattern to increase specificity
    .personal-training-section & {

        &--primary,
        &--gradient {
            background: var(--pt-button-primary-bg, linear-gradient(to right, var(--color-lime-300, #84cc16), var(--color-emerald-400, #10b981)));
            color: var(--pt-button-primary-color, var(--color-text-dark, #111827));

            &:hover:not(:disabled) {
                transform: translateY(var(--pt-button-primary-hover-y, -5px));
                box-shadow: var(--pt-button-primary-shadow, 0 10px 15px -3px rgba(132, 204, 22, 0.3));
            }
        }
    }

    // Gym-specific style override with even higher specificity
    .personal-training-section.personal-training-section--gym & {

        &--primary,
        &--gradient {
            background: var(--pt-button-primary-bg, linear-gradient(to right, var(--color-violet-600, #7c3aed), var(--color-purple-500, #8b5cf6)));
            color: var(--pt-button-primary-color, var(--color-text-inverse, #ffffff));

            &:hover:not(:disabled) {
                transform: translateY(var(--pt-button-primary-hover-y, -3px));
                box-shadow: var(--pt-button-primary-shadow, 0 10px 15px -3px rgba(124, 58, 237, 0.3));
            }
        }
    }

    // Mobile-specific style override
    .personal-training-section.personal-training-section--mobile & {

        &--primary,
        &--gradient {
            // Use the same variables but with mobile-specific values
            background: var(--pt-button-primary-bg);
            color: var(--pt-button-primary-color);

            // Simpler hover effect for mobile
            &:hover:not(:disabled) {
                transform: translateY(var(--pt-button-primary-hover-y, -2px));
                box-shadow: var(--pt-button-primary-shadow);
            }
        }

        // Adjust button sizes for mobile view
        &--small {
            height: 28px;
            padding: 0 0.75rem;
        }

        &--medium {
            height: 36px;
            padding: 0 1rem;
        }
    }

    // Hero Section (placeholder - add specific styling as needed)
    button#{&}#{&}--hero {
        // Hero-specific button styling
    }

    // Features Section (placeholder - add specific styling as needed)
    button#{&}#{&}--features {
        // Features-specific button styling
    }
}