/**
 * Button Component Styles
 * 
 * Using design system tokens for consistency
 */

// Import design system once
@use '../../../styles/design-system/index' as *;

// Build on top of the base .btn styles from design system
.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    border: none;
    border-radius: var(--radius-md, 0.375rem);
    font-family: var(--font-sans, sans-serif);
    font-weight: 600;
    cursor: pointer;
    transition: var(--transition-standard, all 0.3s ease);
    outline: none;
    white-space: nowrap;

    &:focus-visible {
        box-shadow: var(--shadow-focus-ring, 0 0 0 3px rgba(124, 58, 237, 0.5));
    }

    &:disabled {
        opacity: var(--opacity-disabled, 0.6);
        cursor: not-allowed;
    }

    // Size variants
    &--small {
        height: var(--size-btn-sm, 32px);
        padding: 0 var(--spacing-4, 1rem);
        font-size: var(--type-small, 0.875rem);
    }

    &--medium {
        height: var(--size-btn-md, 40px);
        padding: 0 var(--spacing-6, 1.5rem);
        font-size: var(--type-base, 1rem);
    }

    &--large {
        height: var(--size-btn-lg, 48px);
        padding: 0 var(--spacing-8, 2rem);
        font-size: var(--type-lg, 1.125rem);
    }

    // Color variants - Using a lower specificity approach to allow overrides
    // The use of :where() reduces specificity while maintaining selector grouping
    &:where(&--primary) {
        background-color: var(--color-primary, #7c3aed);
        color: var(--color-text-inverse, white);

        &:hover:not(:disabled) {
            filter: brightness(1.05);
        }

        &:active:not(:disabled) {
            filter: brightness(0.95);
        }
    }

    &:where(&--secondary) {
        background-color: var(--color-secondary, #e5e7eb);
        color: var(--color-text, #111827);

        &:hover:not(:disabled) {
            filter: brightness(1.05);
        }

        &:active:not(:disabled) {
            filter: brightness(0.95);
        }
    }

    &:where(&--tertiary) {
        background-color: transparent;
        color: var(--color-primary, #7c3aed);
        border: 1px solid var(--color-primary, #7c3aed);

        &:hover:not(:disabled) {
            background-color: rgba(var(--color-primary-rgb, 124, 58, 237), 0.05);
        }

        &:active:not(:disabled) {
            background-color: rgba(var(--color-primary-rgb, 124, 58, 237), 0.1);
        }
    }

    &:where(&--ghost) {
        background-color: transparent;
        color: var(--color-text, #111827);

        &:hover:not(:disabled) {
            background-color: var(--color-hover-light, rgba(0, 0, 0, 0.05));
        }

        &:active:not(:disabled) {
            background-color: var(--color-active-light, rgba(0, 0, 0, 0.1));
        }
    }

    // Fullwidth
    &--fullwidth {
        width: 100%;
    }

    // Loading state
    &--loading {
        color: transparent;

        .button__spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin-top: -10px;
            margin-left: -10px;
            border: 2px solid currentColor;
            border-top-color: transparent;
            border-radius: var(--radius-full, 9999px);
            animation: button-spin 0.8s linear infinite;
        }

        .button__icon {
            opacity: 0;
        }
    }

    // Icons
    &__icon {
        display: flex;
        align-items: center;
        justify-content: center;

        &--left {
            margin-right: var(--spacing-2, 0.5rem);
        }

        &--right {
            margin-left: var(--spacing-2, 0.5rem);
        }
    }

    &__text {
        display: inline-block;
    }

    // Section-specific theme contexts - Higher specificity for theme contexts
    // This ensures they always take precedence over the base styles
    // Using the button tag to increase specificity without !important
    button#{&}#{&}--personal-training {
        background: var(--pt-button-bg, linear-gradient(to right, #8b5cf6, #6d28d9));
        color: var(--pt-button-color, white);
        border-radius: var(--pt-button-radius, 0.5rem);
        padding: var(--pt-button-padding, 0.75rem 1.5rem);
        height: var(--pt-button-height, auto);

        &:hover:not(:disabled) {
            transform: var(--pt-button-hover-transform, translateY(-2px));
            box-shadow: var(--pt-button-hover-shadow, 0 10px 15px -3px rgba(124, 58, 237, 0.2));
            filter: var(--pt-button-hover-filter, none);
        }

        .button__icon--right {
            margin-left: var(--pt-button-icon-spacing, 0.5rem);
        }
    }

    // CTA version for Personal Training - Higher specificity
    button#{&}#{&}--personal-training-cta {
        background-color: var(--pt-cta-button-bg, white);
        color: var(--pt-cta-button-color, #7c3aed);
        font-weight: var(--pt-cta-button-weight, 600);
        border-radius: var(--pt-cta-button-radius, 0.5rem);
        padding: var(--pt-cta-button-padding, 0.75rem 1.5rem);
        height: var(--pt-cta-button-height, auto);
        box-shadow: var(--pt-cta-button-shadow, 0 4px 6px -1px rgba(0, 0, 0, 0.1));

        &:hover:not(:disabled) {
            transform: var(--pt-cta-button-hover-transform, translateY(-2px));
            box-shadow: var(--pt-cta-button-hover-shadow, 0 10px 15px -3px rgba(0, 0, 0, 0.1));
            filter: var(--pt-cta-button-hover-filter, none);
        }

        .button__icon--right {
            margin-left: var(--pt-cta-button-icon-spacing, 0.5rem);
        }
    }

    // Hero Section (placeholder - add specific styling as needed)
    button#{&}#{&}--hero {
        // Hero-specific button styling
    }

    // Features Section (placeholder - add specific styling as needed)
    button#{&}#{&}--features {
        // Features-specific button styling
    }
}

// Animation for loading spinner
@keyframes button-spin {
    to {
        transform: rotate(360deg);
    }
}

// Media query for reduced motion preference
@media (prefers-reduced-motion: reduce) {
    .button {
        transition: none;
    }

    .button--loading .button__spinner {
        animation-duration: 2s;
    }
}