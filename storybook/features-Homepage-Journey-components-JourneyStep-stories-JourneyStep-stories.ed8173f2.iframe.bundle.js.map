{"version":3,"file":"features-Homepage-Journey-components-JourneyStep-stories-JourneyStep-stories.ed8173f2.iframe.bundle.js","mappings":";AAqIA;AAAA;AAAA;AAAA;ACkOA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://ai-workout-generator-homepage/./src/features/Homepage/Journey/components/JourneyStep.tsx","webpack://ai-workout-generator-homepage/"],"sourcesContent":["import { ChevronRight } from 'lucide-react';\nimport React, { KeyboardEvent } from 'react';\nimport {\n  ExtendedCSSProperties\n} from '../../../../types/components';\nimport { useReducedMotion } from '../hooks/useReducedMotion';\nimport {\n  DetailedFeature,\n  ExpandedContentProps,\n  JourneyStepProps as LocalJourneyStepProps,\n  VariantKey,\n  isVariant\n} from '../types';\n// Import from utils/tokenUtils instead of redefining functions\nimport { getConnectorColorClass, getGlowEffectClass, getStepGradientClass } from '../utils/tokenUtils';\nimport { JourneyFeatureCard } from './index';\nimport StepCTA from './StepCTA';\n\n/**\n * Get variant-specific hover text color for step title using type narrowing\n * @deprecated Will be used in future theming customizations\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getHoverTextColor = (variant: VariantKey): string => {\n  if (isVariant(variant, 'gym') ||\n    isVariant(variant, 'sports') ||\n    isVariant(variant, 'wellness') ||\n    isVariant(variant, 'modern')) {\n    return 'hover-text-journey-accent';\n  }\n\n  return 'hover-text-journey-accent';\n};\n\n/**\n * Get variant-specific expand button styling with proper type narrowing\n * @deprecated Will be used in upcoming UI enhancements\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getExpandButtonStyle = (variant: VariantKey): string => {\n  if (isVariant(variant, 'gym')) {\n    return 'border-lime-400/30 bg-lime-400/10 text-lime-400';\n  } else if (isVariant(variant, 'sports')) {\n    return 'border-cyan-400/30 bg-cyan-400/10 text-cyan-400';\n  } else if (isVariant(variant, 'wellness')) {\n    return 'border-violet-400/30 bg-violet-400/10 text-violet-400';\n  } else if (isVariant(variant, 'modern')) {\n    return 'border-amber-400/30 bg-amber-400/10 text-amber-400';\n  }\n\n  // Default\n  return 'border-[#CCFF00]/30 bg-[#CCFF00]/10 text-[#CCFF00]';\n};\n\n/**\n * Returns the appropriate gradient class for the variant\n * @deprecated Will be used in future theme controls\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getGradientClass = (variant: VariantKey): string => {\n  if (isVariant(variant, 'gym')) {\n    return 'journey-gradient-violet';\n  } else if (isVariant(variant, 'sports')) {\n    return 'journey-gradient-cyan';\n  } else if (isVariant(variant, 'wellness')) {\n    return 'journey-gradient-teal';\n  } else if (isVariant(variant, 'modern')) {\n    return 'journey-gradient-amber';\n  }\n\n  return 'journey-gradient-lime';\n};\n\n/**\n * Get the appropriate timeline color class based on step accent color\n * @deprecated Will be used in custom timeline styling\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getTimelineColorClass = (accentColor?: string): string => {\n  if (!accentColor) return 'timeline-lime'; // Default\n\n  try {\n    if (accentColor.includes('cyan')) {\n      return 'timeline-cyan';\n    } else if (accentColor.includes('violet')) {\n      return 'timeline-violet';\n    } else if (accentColor.includes('amber')) {\n      return 'timeline-amber';\n    }\n  } catch (_e) {\n    // If includes method fails, return default\n    return 'timeline-lime';\n  }\n\n  // Default to lime\n  return 'timeline-lime';\n};\n\n/**\n * JourneyStep - Renders a single step in the journey process\n */\nconst JourneyStep: React.FC<LocalJourneyStepProps> = ({\n  step,\n  index,\n  isExpanded,\n  onToggle,\n  isLast,\n  variant = 'default'\n}) => {\n  const _prefersReducedMotion = useReducedMotion();\n\n  // Get appropriate classes from our token utility\n  const stepGradientClass = getStepGradientClass(step.number);\n  const glowEffectClass = getGlowEffectClass(step.number);\n  const connectorClass = getConnectorColorClass(step.number);\n\n  // Handle keyboard events\n  const handleKeyDown = (e: KeyboardEvent<HTMLDivElement>): void => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      onToggle();\n    }\n  };\n\n  // Custom CSS properties with proper typing\n  const customStyle: ExtendedCSSProperties = {\n    '--journey-step-highlight': step.accentColor || 'var(--color-journey-accent)',\n  };\n\n  return (\n    <>\n      {/* Main Step Card */}\n      <div\n        className={`\n          relative p-4 md:p-6 rounded-xl journey-bg-card z-10\n          border ${isExpanded ? 'journey-border-active' : 'journey-border'}\n          transition-medium cursor-pointer group ${glowEffectClass}\n        `}\n        onClick={onToggle}\n        role=\"button\"\n        tabIndex={0}\n        aria-expanded={isExpanded}\n        aria-controls={`step-content-${index}`}\n        onKeyDown={handleKeyDown}\n        data-theme={variant !== 'default' ? variant : undefined}\n        data-aos={_prefersReducedMotion ? undefined : 'fade-up'}\n        data-aos-delay={_prefersReducedMotion ? undefined : step.delay?.toString()}\n        style={customStyle}\n      >\n        <div className=\"flex flex-col md:flex-row items-start md:items-center gap-4\">\n          {/* Step Icon & Number */}\n          <div className=\"relative\">\n            <div className={`w-16 h-16 rounded-xl ${stepGradientClass} flex items-center justify-center group-hover:scale-105 transition-transform duration-300`}>\n              {step.icon}\n              <div className={`absolute inset-0 rounded-xl ${stepGradientClass} opacity-15 blur-[1px] group-hover:opacity-25 transition-opacity`} aria-hidden=\"true\"></div>\n            </div>\n\n            {/* Step number */}\n            <div className=\"absolute -top-3 -left-3 w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold journey-gradient-lime text-gray-900\">\n              {index + 1}\n            </div>\n          </div>\n\n          {/* Step Information */}\n          <div className=\"flex-1\">\n            <h3 className=\"text-xl md:text-2xl font-bold mb-2 journey-text-heading group-hover:journey-text-heading-hover transition-colors flex items-center\">\n              {step.title}\n            </h3>\n            <p className=\"journey-text-description group-hover:journey-text-description-hover transition-colors md:pr-8\">\n              {step.description}\n            </p>\n          </div>\n\n          {/* Expand/Collapse Button */}\n          <div className={`p-2 rounded-full journey-accent-border-30 journey-accent-bg-10 transition-all duration-300 ${isExpanded ? 'rotate-90' : ''}`} aria-hidden=\"true\">\n            <ChevronRight size={20} className=\"journey-text-accent\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Progress connector - Now outside the card to connect with the timeline */}\n      {!isLast && (\n        <div className={`journey-step-connector ${connectorClass}`} aria-hidden=\"true\"></div>\n      )}\n\n      {/* Expanded Content */}\n      <ExpandedContent\n        step={step}\n        index={index}\n        isExpanded={isExpanded}\n        variant={variant}\n      />\n    </>\n  );\n};\n\n/**\n * ExpandedContent - Renders the detailed features when a step is expanded\n */\nconst ExpandedContent: React.FC<ExpandedContentProps> = ({\n  step,\n  index,\n  isExpanded,\n  variant = 'default'\n}) => {\n  const _prefersReducedMotion = useReducedMotion();\n\n  // Don't render content at all when collapsed to save memory and prevent space issues\n  if (!isExpanded) {\n    return null;\n  }\n\n  // Custom CSS properties with proper typing\n  const customStyle: ExtendedCSSProperties = {\n    '--journey-content-highlight': step.accentColor || 'var(--color-journey-accent)',\n  };\n\n  return (\n    <div\n      id={`step-content-${index}`}\n      className=\"mt-2 rounded-xl journey-bg-card journey-border z-10 relative overflow-hidden p-4 md:p-6 animate-fade-in\"\n      data-theme={variant !== 'default' ? variant : undefined}\n      style={customStyle}\n    >\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        {step.detailedFeatures?.map((feature: DetailedFeature, featureIndex: number) => (\n          <JourneyFeatureCard\n            key={featureIndex}\n            feature={feature}\n            variant={variant}\n          />\n        ))}\n      </div>\n\n      {/* CTA Section */}\n      <StepCTA\n        step={step}\n        isExpanded={true}\n        variant={variant}\n      />\n    </div>\n  );\n};\n\nexport default JourneyStep; "],"names":[],"sourceRoot":""}