#!/bin/bash
# Enhanced script to verify SCSS files follow modern Sass practices
# This checks for both canonical design system imports and modern @use syntax

echo "üîç Checking SCSS files for modern Sass practices..."

# Directory to search within
SOURCE_DIR="src"

# Check for SCSS files missing the canonical import
echo "1Ô∏è‚É£ Checking for missing design system imports..."
MISSING_IMPORTS=$(find $SOURCE_DIR/features -name "*.scss" -type f | xargs grep -L "@use.*styles/design-system")

if [ -n "$MISSING_IMPORTS" ]; then
  echo "‚ùå ERROR: The following SCSS files are missing the canonical design system import:"
  echo "$MISSING_IMPORTS"
  echo ""
  echo "Please add the following to the top of each file:"
  echo "// Canonical design system import - MUST BE FIRST"
  echo "@use '../../../styles/design-system' as ds;"
  echo ""
  echo "Note: For files in subdirectories, adjust the path accordingly."
  HAS_ERRORS=true
else
  echo "‚úÖ All SCSS files have the required design system import!"
fi

# Check for deprecated @import usage (except for valid cases)
echo ""
echo "2Ô∏è‚É£ Checking for deprecated @import usage..."

# Find all SCSS files
SCSS_FILES=$(find $SOURCE_DIR -name "*.scss" -type f)

# Initialize counters
DEPRECATED_COUNT=0
VALID_COUNT=0

# Check each file for @import usage
for file in $SCSS_FILES; do
  # Count @import directives, excluding valid cases (CSS imports like AOS)
  IMPORT_COUNT=$(grep -c "@import" $file)
  CSS_IMPORT_COUNT=$(grep -c "@import.*\.css" $file)
  VALID_IMPORT_COUNT=$CSS_IMPORT_COUNT
  
  # Calculate deprecated imports
  DEPRECATED_IMPORTS=$((IMPORT_COUNT - VALID_IMPORT_COUNT))
  
  if [ $DEPRECATED_IMPORTS -gt 0 ]; then
    echo "‚ùå $file contains $DEPRECATED_IMPORTS deprecated @import directives"
    grep -n "@import" $file | grep -v "\.css"
    DEPRECATED_COUNT=$((DEPRECATED_COUNT + DEPRECATED_IMPORTS))
  else
    VALID_COUNT=$((VALID_COUNT + 1))
  fi
done

echo ""
if [ $DEPRECATED_COUNT -gt 0 ]; then
  echo "‚ùå Found $DEPRECATED_COUNT deprecated @import directives across the codebase"
  echo "Please convert these to @use directives with appropriate namespacing."
  echo ""
  echo "Example conversion:"
  echo "BEFORE: @import '../../../styles/design-system/index';"
  echo "AFTER:  @use '../../../styles/design-system' as ds;"
  HAS_ERRORS=true
else
  echo "‚úÖ No deprecated @import directives found!"
fi

# Check for proper namespacing with @use
echo ""
echo "3Ô∏è‚É£ Checking for proper namespacing with @use..."

# Find all SCSS files using @use but without namespace
MISSING_NAMESPACE=$(find $SOURCE_DIR -name "*.scss" -type f -exec grep -l "@use" {} \; | xargs grep -L "@use.*as ")

if [ -n "$MISSING_NAMESPACE" ]; then
  echo "‚ö†Ô∏è WARNING: The following files use @use without proper namespacing:"
  echo "$MISSING_NAMESPACE"
  echo ""
  echo "Consider adding namespaces to @use directives for better code organization:"
  echo "BEFORE: @use '../../../styles/design-system';"
  echo "AFTER:  @use '../../../styles/design-system' as ds;"
  HAS_WARNINGS=true
else
  echo "‚úÖ All @use directives have proper namespacing!"
fi

# Final summary
echo ""
echo "üìä SCSS Modernization Summary:"
echo "----------------------------------------"
echo "Total SCSS files checked: $(echo "$SCSS_FILES" | wc -l | tr -d ' ')"
echo "Files with proper imports: $VALID_COUNT"
echo "Deprecated @import directives: $DEPRECATED_COUNT"
echo ""

if [ "$HAS_ERRORS" = true ]; then
  echo "‚ùå SCSS modernization verification failed with errors."
  exit 1
elif [ "$HAS_WARNINGS" = true ]; then
  echo "‚ö†Ô∏è SCSS modernization verification passed with warnings."
  exit 0
else
  echo "‚úÖ SCSS modernization verification passed successfully!"
  exit 0
fi 