name: Quality Metrics

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # Run every Sunday at midnight
  workflow_dispatch:

jobs:
  metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for comparing metrics over time
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate metrics
        run: npm run metrics
      
      - name: Upload metrics artifacts
        uses: actions/upload-artifact@v3
        with:
          name: metrics
          path: documentation-site/metrics/data/
      
      - name: Report metrics in PR (if PR)
        if: github.event_name == 'pull_request'
        run: |
          PR_COMMENT="## Quality Metrics Report

          ### Bundle Size
          - Main bundle: $(cat documentation-site/metrics/data/latest-metrics.json | jq -r '.bundle.mainBundleSize | . / 1024 | round | tostring + " KB"')
          - Total size: $(cat documentation-site/metrics/data/latest-metrics.json | jq -r '.bundle.totalBundleSize | . / 1024 | round | tostring + " KB"')

          ### Code Stats
          - TypeScript files: $(cat documentation-site/metrics/data/latest-metrics.json | jq -r '.codeQuality.fileCount.ts + .codeQuality.fileCount.tsx')
          - SCSS files: $(cat documentation-site/metrics/data/latest-metrics.json | jq -r '.codeQuality.fileCount.scss')
          - Lines of code: $(cat documentation-site/metrics/data/latest-metrics.json | jq -r '.codeQuality.linesOfCode')
          
          *Generated on $(date "+%Y-%m-%d")*"
          
          echo "$PR_COMMENT" > metrics_comment.md
          
          # Using GitHub CLI to post comment
          gh pr comment ${{ github.event.pull_request.number }} -F metrics_comment.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Commit metrics to repository
        if: github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add documentation-site/metrics/data/
          git commit -m "Update quality metrics [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF} 